# Generated by Django 4.2.4 on 2023-08-14 10:53

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import smart_solutions_app.utils
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('username', models.CharField(max_length=50, unique=True)),
                ('email', models.EmailField(max_length=100, unique=True)),
                ('phone', models.CharField(max_length=50, null=True)),
                ('first_name', models.CharField(max_length=50, null=True)),
                ('last_name', models.CharField(max_length=50, null=True)),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='user/')),
                ('balance', models.IntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
            },
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(max_length=200, verbose_name='Адрес')),
                ('floor', models.CharField(blank=True, max_length=10, null=True, verbose_name='Этаж')),
                ('entrance', models.CharField(blank=True, max_length=10, null=True, verbose_name='Подъезд')),
                ('intercom', models.CharField(blank=True, max_length=20, null=True, verbose_name='Домофон')),
                ('apartment', models.CharField(blank=True, max_length=20, null=True, verbose_name='Квартира дом')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_address', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Адрес',
                'verbose_name_plural': 'Адреса',
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50, verbose_name='Имя')),
                ('last_name', models.CharField(max_length=50, verbose_name='Фамилия')),
                ('phone', models.CharField(max_length=20, verbose_name='Телефон')),
                ('passport', models.CharField(max_length=30, verbose_name='Паспортные данные')),
                ('characteristics', models.TextField(verbose_name='Информация о работнике')),
                ('busy', models.BooleanField(default=False, verbose_name='Статус занятости')),
            ],
            options={
                'verbose_name': 'Сотрудник',
                'verbose_name_plural': 'Сотрудники',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.UUIDField(default=uuid.UUID('80758f70-3508-4211-8524-6ac09c963288'), editable=False, primary_key=True, serialize=False)),
                ('total_price', models.IntegerField(verbose_name='Стоимость заказа')),
                ('status', models.CharField(choices=[('Заказ оформлен', 'Заказ оформлен'), ('Заказ принят', 'Заказ принят'), ('Заказ на стадии выполнения', 'Заказ на стадии выполнения'), ('Заказ выполнен', 'Заказ выполнен')], default='Заказ оформлен', max_length=30, verbose_name='Статус')),
                ('address', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='smart_solutions_app.address', verbose_name='Адрес')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_orders', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Заказ',
                'verbose_name_plural': 'Заказы',
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='Наименование')),
                ('description', models.TextField(verbose_name='Описание')),
            ],
            options={
                'verbose_name': 'Сервис',
                'verbose_name_plural': 'Сервисы',
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_id', models.TextField(editable=False, verbose_name='Номер транзакции')),
                ('amount', models.IntegerField(verbose_name='Сумма')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Транзакция',
                'verbose_name_plural': 'Транзакции',
            },
        ),
        migrations.CreateModel(
            name='ServiceTariffPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(verbose_name='Описание')),
                ('price', models.IntegerField(default=0, verbose_name='Цена')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tariff_plan', to='smart_solutions_app.service', verbose_name='Сервис')),
            ],
            options={
                'verbose_name': 'Тариф',
                'verbose_name_plural': 'Тарифы',
            },
        ),
        migrations.CreateModel(
            name='ServiceGallery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to='service/', verbose_name='Изображение')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='smart_solutions_app.service', verbose_name='Сервис')),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=400, verbose_name='Отзыв')),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Дата создания')),
                ('employee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='employee_reviews', to='smart_solutions_app.employee', verbose_name='Работник')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='smart_solutions_app.review')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Отзыв',
                'verbose_name_plural': 'Отзывы',
            },
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('star', models.CharField(choices=[('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5')], max_length=20)),
                ('employee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='employee_rating', to='smart_solutions_app.employee', verbose_name='Работник')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Рейтинг',
                'verbose_name_plural': 'Рейтинги',
            },
        ),
        migrations.CreateModel(
            name='OrderService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='smart_solutions_app.employee', verbose_name='Работник')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='order_services', to='smart_solutions_app.order', verbose_name='Номер заказа')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='smart_solutions_app.service', verbose_name='Сервис')),
                ('tariff_plan', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='smart_solutions_app.servicetariffplan', verbose_name='Тарифный план')),
            ],
            options={
                'verbose_name': 'Товар заказа',
                'verbose_name_plural': 'Товары заказа',
            },
        ),
        migrations.CreateModel(
            name='EmployeeGallery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to=smart_solutions_app.utils.employee_image_path, verbose_name='Изображение')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='employee_images', to='smart_solutions_app.employee')),
            ],
            options={
                'verbose_name': 'Изображение',
                'verbose_name_plural': 'Изображения',
            },
        ),
        migrations.AddField(
            model_name='employee',
            name='service',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='employees', to='smart_solutions_app.service', verbose_name='Сервис'),
        ),
        migrations.AddField(
            model_name='employee',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь'),
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.IntegerField(blank=True, verbose_name='Цена')),
                ('employee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='smart_solutions_app.employee', verbose_name='Работник')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cart_services', to='smart_solutions_app.service', verbose_name='Сервис')),
                ('tariff_plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cart_tariff_plans', to='smart_solutions_app.servicetariffplan', verbose_name='Тарифный план')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Корзина',
                'verbose_name_plural': 'Корзины',
            },
        ),
        migrations.CreateModel(
            name='Application',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50, verbose_name='Имя')),
                ('last_name', models.CharField(max_length=50, verbose_name='Фамилия')),
                ('passport', models.CharField(max_length=50, verbose_name='Паспортные данные')),
                ('phone', models.CharField(max_length=50, verbose_name='Телефон')),
                ('characteristics', models.TextField(verbose_name='Личная информация')),
                ('passport_image', models.ImageField(upload_to=smart_solutions_app.utils.application_passport_image_path, verbose_name='Фотография паспорта')),
                ('image', models.ImageField(upload_to=smart_solutions_app.utils.application_image_path, verbose_name='Изображение')),
                ('status', models.CharField(choices=[('принят', 'Принят'), ('отказано', 'Отказано'), ('рассматривается', 'Рассматривается')], default='рассматривается', max_length=100, verbose_name='Статус заявления')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='smart_solutions_app.service', verbose_name='Сервис')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Заявление',
                'verbose_name_plural': 'Заявления',
            },
        ),
    ]
